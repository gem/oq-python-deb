Index: oq-python3.8-3.8.1/Makefile.pre.in
===================================================================
--- oq-python3.8-3.8.1.orig/Makefile.pre.in
+++ oq-python3.8-3.8.1/Makefile.pre.in
@@ -1181,8 +1181,9 @@ install: @FRAMEWORKINSTALLFIRST@ commoni
 			upgrade) ensurepip="--upgrade" ;; \
 			install|*) ensurepip="" ;; \
 		esac; \
+                $(RUNSHARED) $(PYTHON_FOR_BUILD) -c "import sys ; print(sys.path)" ; \
 		$(RUNSHARED) $(PYTHON_FOR_BUILD) -m ensurepip \
-			$$ensurepip --root=$(DESTDIR)/ ; \
+			$$ensurepip --default-pip --root=$(DESTDIR)/ ; \
 	fi
 
 altinstall: commoninstall
@@ -1192,7 +1193,7 @@ altinstall: commoninstall
 			install|*) ensurepip="--altinstall" ;; \
 		esac; \
 		$(RUNSHARED) $(PYTHON_FOR_BUILD) -m ensurepip \
-			$$ensurepip --root=$(DESTDIR)/ ; \
+			$$ensurepip --default-pip --root=$(DESTDIR)/ ; \
 	fi
 
 commoninstall:  check-clean-src @FRAMEWORKALTINSTALLFIRST@ \
Index: oq-python3.8-3.8.1/Lib/distutils/command/install.py
===================================================================
--- oq-python3.8-3.8.1.orig/Lib/distutils/command/install.py
+++ oq-python3.8-3.8.1/Lib/distutils/command/install.py
@@ -413,6 +413,8 @@ class install(Command):
 
     def finalize_unix(self):
         """Finalizes options for posix platforms."""
+        if os.environ.get('GEM_DEBIAN_INSTALL_LAYOUT', None):
+            self.install_layout = os.environ.get('GEM_DEBIAN_INSTALL_LAYOUT')
         if self.install_base is not None or self.install_platbase is not None:
             if ((self.install_lib is None and
                  self.install_purelib is None and
@@ -471,7 +473,10 @@ class install(Command):
                 if os.path.normpath(self.prefix) == '/usr/local':
                     self.prefix = self.exec_prefix = '/usr'
                     self.install_base = self.install_platbase = '/usr'
-                self.select_scheme("unix_local")
+                # oq-python is already a 'local' folder so we use normal
+                # 'unix_prefix' schema
+                # self.select_scheme("unix_local")
+                self.select_scheme("deb_system")
 
     def finalize_other(self):
         """Finalizes options for non-posix platforms"""
